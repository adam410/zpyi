{"name":"Zpyi","tagline":"The power of python in your Zsh","body":"zpyi\r\n====\r\n\r\nzpyi makes your shell smarter, in more ways than one. It's no magic, it's python.\r\n\r\n```\r\n                    _ \r\n                   (_)\r\n ____ _ __   _   _  _ \r\n|_  /| '_ \\ | | | || |\r\n / / | |_) || |_| || |\r\n/___|| .__/  \\__, ||_|\r\n     | |      __/ |   \r\n     |_|     |___/    \r\n```\r\n\r\nYour shell now falls back to python if some command couldn't be handled by zsh.\r\nSo you can now do `2+3` directly in your shell. Well, something much more complex than that.\r\n\r\nOf course, I did not want to break any existing functionality provided by Zsh and configured by me.\r\nThis prompted the need to use `'2**107'` instead of `2**107` to evaluate 2 to the exponent of 107.\r\nOtherwise there would have been conflicts with the wildcard syntax of Zsh.\r\n\r\nOh, and I imported math library already.\r\n\r\nThere are of course options. You can use your shell within python, but be ready to give up the awesome tab\r\ncompletion and prompts, and various other plugins available with Zsh.\r\n\r\n# Examples\r\nThese things should now work in your shell.\r\n* `2+4`\r\n* `'2**107'`\r\n* `'pow(10, 5)'`\r\n* `'sqrt(5)'`\r\n\r\n# The awesome eix fall-back\r\nInterestingly, Zpyi will also search for a package similar to the erroneous command you just entered.\r\nFor example, I type `lisp`. I don't know what package it is in. Zpyi will see that running `eix` (Gentoo only) helps in this\r\nand there is some output. It'll display that output and I'd know that there is a package called `commonlisp`.\r\n\r\n# Installing?\r\nStill TODO\r\n\r\n# TODO\r\n* The above section ?\r\n* Add support for other distros\r\n* Allow running a python daemon to support many more commands.\r\n* Allow dynamic loading of modules.\r\n* Add runtime flags.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}